package com.example.baitap;

import android.Manifest;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Build;

import androidx.core.app.ActivityCompat;
import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;

public class ThongBaoReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {
        String channelId = "uong_nuoc_channel";
        String title = "Nh·∫Øc nh·ªü u·ªëng n∆∞·ªõc üíß";
        String message = "ƒê√£ ƒë·∫øn gi·ªù b·ªï sung n∆∞·ªõc cho c∆° th·ªÉ r·ªìi!";

        // T·∫°o channel (cho Android 8.0 tr·ªü l√™n)
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            NotificationChannel channel = new NotificationChannel(
                    channelId,
                    "Nh·∫Øc nh·ªü u·ªëng n∆∞·ªõc",
                    NotificationManager.IMPORTANCE_DEFAULT
            );
            NotificationManager manager = context.getSystemService(NotificationManager.class);
            if (manager != null) {
                manager.createNotificationChannel(channel);
            }
        }

        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, channelId)
                .setSmallIcon(android.R.drawable.ic_dialog_info)
                .setContentTitle(title)
                .setContentText(message)
                .setAutoCancel(true)
                .setPriority(NotificationCompat.PRIORITY_HIGH);

        // üîí Ki·ªÉm tra quy·ªÅn tr∆∞·ªõc khi g·ª≠i th√¥ng b√°o
        if (ActivityCompat.checkSelfPermission(context, Manifest.permission.POST_NOTIFICATIONS)
                != PackageManager.PERMISSION_GRANTED) {
            // N·∫øu ch∆∞a c√≥ quy·ªÅn, tho√°t ra (tr√°nh crash)
            return;
        }

        // ‚úÖ G·ª≠i th√¥ng b√°o
        NotificationManagerCompat.from(context).notify(1, builder.build());
    }
}
